p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,100000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
length(p[abs(p) <= 0.05])/100000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(30,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/10000
length(p[abs(p) > 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(5,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(5,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(1,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(1,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(100,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(100,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/10000
subj_c1
subj_c2
?rlnorm
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,0.5)))#
	subj_c2[i] <- mean((rlnorm(30,0,0,5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,0.5)))#
	subj_c2[i] <- mean((rlnorm(30,0,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,0.5)))#
	subj_c2[i] <- mean((rlnorm(30,0,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/1000
hist(subj_c1)
hist(subj_c2)
p[j]
t.test(subj_c1,subj_c2, paired = T, var.equal = T)
t.test(subj_c1,subj_c2, paired = F, var.equal = F)
hist(rlnorm(100,1,0.5))
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(100,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(100,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/1000
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
a <- c()"boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "cups", "flags", "forks" "hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","shoes","belts","bells","flowers","pots","eagles","frogs")
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "cups", "flags", "forks" "hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","shoes","belts","bells","flowers","pots","eagles","frogs")
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "cups", "flags", "forks" "hearts", "leaves","trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","shoes","belts","bells","flowers","pots","eagles","frogs")
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "cups", "flags", "forks",leaves","trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","shoes","belts","bells","flowers","pots","eagles","frogs")
a = c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "cups", "flags", "forks" ,"hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","shoes","belts","bells","flowers","pots","eagles","frogs")
length(a)
unique(a)
length(unique(a))
summary(a)
summary(as.factor(a))
?aspell
aspell(a)
a = c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","cans","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","squares","triangle","puppets")
length(a)
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","cans","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","squares","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books")
length(a)
length(unique(a))
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","cans","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","squares","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons",)
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "bags", "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","toys","coin","keys","clocks","pumps","shells","houses","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","rings","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","cans","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","squares","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons")
length(unique(a))
summary(as.factor(a))
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","coin","keys","clocks","pumps","shells","hats","planes","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","squares","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons")
length(unique(a))
length(a)
summary(as.factor(a))
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","coin","keys","clocks","pumps","shells","hats","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons","clocks","letters","parcels","slippers")
length(a)
length(unique(a))
summary(as.factor(a))
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","coin","keys","clocks","pumps","shells","hats","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons","letters","parcels","slippers","masks","shells")
length(unique(a))
length(a)
summary(as.factor(a))
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","coin","keys","clocks","pumps","shells","hats","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons","letters","parcels","slippers","masks","seeds","cookies","dishes","drums","carrots")
summary(as.factor(a))
length(unique(a))
length(a)
a <- c(""boats", "houses", "lamps", "stars", "discs", "planes" , "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","coin","keys","clocks","pumps","shells","hats","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons","letters","parcels","slippers","masks","seeds","cookies","dishes","drums","carrots","peppers"")
a <- c("boats", "houses", "lamps", "stars", "discs", "planes" , "locks", "canes", "hands", "shoes", "bones", "squares", "bells", "bows", "cars", "crosses", "flags", "hearts", "leaves", "trees","bikes","chairs","coin","keys","clocks","pumps","shells","hats","dolls","spoons","forks","beds","beetles","cups","bowls","bags","buckets","dogs","geese","cats","cans","hammers","bricks","bottles","pens","pencils","ribbons","cards","buttons","dice","shirts","socks","belts","flowers","pots","eagles","frogs","combs","candies","trays","pipes","baskets","cushions","blankets","towels","tubes","monkeys","napkins","crates","pills","rocks","ropes","sticks","wheels","boots","cones","triangle","puppets","violins","barrels","gloves","erasers","beans","rings","pillows","candles","mugs","books","toys","balloons","letters","parcels","slippers","masks","seeds","cookies","dishes","drums","carrots","peppers")
length(a)
length(unique(a))
library(lme4)
inv(-3)
1/-1.3
library(retimes)
rexgauss(5,0,1,1)
hist(rexgauss(50,0,1,0.5))
rexgauss(50,0,1,1)
help('stan')
library(stan)
library(rstan)
help(stan)
1/10
1/2
exp(0.1)
?exp
0.1/1
1/0.1
1/0.5
library(retimes)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")
plot(0, )
plot(1, type="n", axes=F, xlab="", ylab="")
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")
library(gamlss.dist)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")
library(gamlss.dist)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "The ex-GAUS  density mu=300 ,sigma=35,nu=100")
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "", col = "red")
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "", lwd = 5)#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "", col = "red", lwd = 5)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "reaction time")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "", col = "red", lwd = 5)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "", col = "red", lwd = 5)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time", bty = "n")#
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600,add = T, #
 main = "", col = "red", lwd = 5)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time", bty = "n")#
curve(dexGAUS(x, mu=400 ,sigma=35,nu=100), 100, 600,add = T, #
 main = "", col = "red", lwd = 5)
curve(dexGAUS(x, mu=300 ,sigma=35,nu=100), 100, 600, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time", bty = "n")
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 100, 600, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time", bty = "n")
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 300, 1500, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time", bty = "n")
curve(dexGAUS(x, mu=300 ,sigma=35,nu=300), 200, 1500, #
 main = "", lwd = 5, ylab = "Prob. Density", xlab  = "Reaction Time", bty = "n")
setwd("~/Dropbox/Studies/PolysemyGelman/Expt 2")
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)
summary(Child)
contrasts(Child$LabelType)[1] <- -1#
contrasts(Child$WordType)[1] <- -1
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","Different Label") )
summary(Child)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )
summary(Child)
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm = T)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)
Child <- rbind(child.b,child.e)
Child <- rbind(child.b,hild.e)
Child <- rbind(Child.b,Child.e)
summary(Child)
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"))
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)
summary(glmer(superordinate.match ~ Meaning*Label + (1|ID), data= Child, family = "binomial"))
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical" & age %in% c("3","4")),na.rm=T)
summaryBy(superordinate.match ~ Meaning + Label, data = subset(Child, trial.type == "critical" & age %in% c("3","4")),na.rm=T)
summary(glmer(superordinate.match ~ age*Meaning*Label + (1|ID), data= subset(Child, trial.type == "critical" & age %in% c("3","4")), family = "binomial"))
summary(glmer(superordinate.match ~ Meaning*Label + (1|ID), data= subset(Child, trial.type == "critical" & age %in% c("3","4")), family = "binomial"))
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
Child$Choice <- Child$superordinate.match
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
summaryBy(superordinate.match ~ Meaning + Label, data = subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes"),na.rm=T)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")+facet_grid(.~TriadType)+ scale_x_discrete(breaks=levels(Child.means$Meaning),#
                      labels=c("Unambiguous", "Polysemous"))
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
Child.means
length(unique(Child$ID))
length(unique(Child$ID))
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
 Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)
length(unique(Child$ID))
Child.means
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
Child.means
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)
Child.means
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.75))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,0.1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes")
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes")
summary(Child)
summary(as.factor(Child$Exclude))
summary(as.factor(Child$exclude))
summary(as.factor(Child$comments))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes")#
#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(superordinate.match ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child$Choice <- Child$superordinate.match#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes")#
Child$Choice <- Child$superordinate.match#
#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(Choice ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
summary(glmer(Choice~Meaning + (1|ID), data = subset(Child, Meaning == "Unambiguous (Same Kind)"), family = "binomial"))
summary(glmer(Choice~Label + (1|ID), data = subset(Child, Meaning == "Unambiguous (Same Kind)"), family = "binomial"))
summary(glmer(Choice~Label + (1|ID), data = subset(Child, Meaning != "Unambiguous (Same Kind)"), family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1|ID), data = Child, family = "binomial"))
summary(Child)
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes")#
Child$Choice <- Child$superordinate.match
summary(Child)
length(unique(Child$ID))
length(unique(Child.e$ID))
length(unique(Child.b$ID))
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)
length(unique(Child.b$ID))
length(unique(Child$ID))
summary(Child)
summary(Child.b)
summary(Child.e)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c("3","4") & exclude != "yes")#
Child$Choice <- Child$superordinate.match
summary(Child.e)
summary(Child)
length(unique(Child$ID))
length(unique(Child.e$ID))
length(unique(Child.b$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c(3,4) & exclude != "yes")
length(unique(Child.b$ID))
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, age %in% c(3,4) & exclude != "yes")
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, exclude != "yes")
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c(3,4))
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)
summary(Child)
length(unique(Child$ID))
length(unique(subset(Child, trial.type == "critical")$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical")
length(unique(Child$ID))
summary(as.factor(Child$exclude))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c(3,4))
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c(3,4) & !exclude %in% c("yes") )
length(unique(Child$ID))
library(Hmisc)#
library(ggplot2)#
library(doBy)#
library(lme4)#
library(plyr)#
#
Child.e = read.csv("Gelman_Expt2_Data_Edinburgh.csv", header = T)#
Child.b = read.csv("Gelman_Expt2_Data_Ber.csv", header = T)#
Child <- rbind(Child.e,Child.b)#
Child <- subset(Child, trial.type == "critical" & age %in% c(3,4) & !exclude %in% c("yes"))#
Child$Choice <- Child$superordinate.match#
#
Child$Meaning <- ifelse(Child$concept.type == "Non-Polysemous","Unambiguous (Same Kind)","Polysemous (Distinct Kinds)")#
Child$Meaning <- ordered(Child$Meaning, levels = c("Unambiguous (Same Kind)","Polysemous (Distinct Kinds)") )#
Child$Label <- ifelse(Child$label == "no","No Label", "Shared Label")#
Child$Label <- ordered(Child$Label, levels = c("Shared Label","No Label") )#
summaryBy(Choice ~ age + Meaning + Label, data = subset(Child, trial.type == "critical"),na.rm=T)#
#
Child.means <- summaryBy(Choice~ Meaning + Label, data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$ID))/2)#
#
avg.plot<- ggplot(Child.means, aes(Meaning, Choice.mean, fill = Label)) + #
 stat_summary(fun.y="mean", geom="bar", position = "dodge")#
#add error bars#
avg.plot+geom_errorbar(aes(ymax=Child.means$Choice.mean+Child.means$SE, ymin=Child.means$Choice.mean-Child.means$SE), position=position_dodge(.9), width = 0)+theme_bw()+ylab("Proportion choosing related item")+ylim(c(0,1))+ geom_hline(yintercept = 0.5, colour = "black",lty = 3)+xlab("")#
Child.means <- summaryBy(Choice~ TriadType+Meaning + Label , data=Child, na.rm = T, FUN = c(mean,sd))#
Child.means$SE <- Child.means$Choice.sd/sqrt(length(unique(Child$SubjNo))/2)
summary(glmer(Choice~Label*Meaning + (1|ID), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning*as.factor(age) + (1|ID), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1+Label|ID), data = Child, family = "binomial"))
contrasts(Child$Label)
contrasts(Child$Meaning)
summary(Child)
summary(glmer(Choice~Label*Meaning + (1+Label|ID) + (1|triad.type), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1+Label|ID) + (1+Label*Meaning|triad.type), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1+Label|ID) + (1+Label+Meaning|triad.type), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1+Label|ID) + (1+Meaning|triad.type), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1+Label|ID) + (1|triad.type), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1|ID) + (1|triad.type), data = Child, family = "binomial"))
summary(glmer(Choice~Label*Meaning + (1+Label|ID) + (1+Label|triad.type), data = Child, family = "binomial"))
